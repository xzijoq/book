// THIS CONTAINS MAIN FUNCTION -- BE WEARY MON
#include "main.h"
#include <vector>
using namespace std;
void simple_text_menu();
void dd( int& a );
void psize();

class hithere
{
 private:
  int*         data;
  unsigned int length;

 public:
  hithere( unsigned int s ) : data( nullptr ), length( 0 )
  {
    length = s;
    data = new int[ length ];
    for ( unsigned int i{0}; i < length; i++ )
    {
      data[ i ] = 0;
    }
  }
  void seth( unsigned int n, int v )
  {
    data[ n ] = v;
    if ( n < length )
    {
      cout << "okies";
    }
    else
    {
      cout << "youve got be kidding me\n";
    }
  }
  int geth( int n ) { return data[ n ]; }
  ~hithere() { delete[] data; }
};

auto main() -> int
{
  // simple_text_menu();

  // int* a = new int[ 2 ];
  // cout << a[ -5000 ];
  // psize();
  // void* a1 = reinterpret_cast<void*>( 0xff );
  hithere o1{2};
  o1.seth( 1, 12 );
  o1.seth( 2, 23 );
  o1.seth( 3, 11 );
  cout << o1.geth( 1 );
  cout << o1.geth( 3 );
}

void psize()
{
  vector<int>  v( 1000 );
  vector<char> c( 2000 );
  cout << "size in bytes:" << sizeof( int ) << endl
       << sizeof( int* ) << endl
       << sizeof( char* );
  cout << "\n vector size: " << sizeof( v );
  cout << "\n cvec size: " << sizeof( c );
  constexpr int ar[] = {
      12, 12, 12, 13, 1, 1, 1, 323, 123,
  };
  for ( auto i : ar )
  {
    cout << i << endl;
  }
}

// void test()

void simple_text_menu()
{  // TODO : include from the bloddy cmake variables
  int n{0};
  cout << "Please choose a option to display" << endl;
  cout << "0. EXIT (0)" << endl;
  cout << "1. Part1" << endl;
  //  main1();

  cin >> n;
  switch ( n )
  {
    case 1:
      one();
      simple_text_menu();
      break;  // will never be executed still no warning
    case 2:
      main1();
      simple_text_menu();
      break;
    case 0:
      exit( 0 );
    default:
      cout << "are u sure\n";
      simple_text_menu();
  }
}
